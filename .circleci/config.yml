version: 2.1

_run:
    notify_on_fail: &notify_on_fail
      when: on_fail
      command: |
        wget https://raw.githubusercontent.com/segmentio/circleci-notifications/master/slack-notify-branch.sh
        chmod u+x slack-notify-branch.sh
        BUILD_STATUS="Failed" NOTIFY_BRANCH="master scheduled_e2e_testing" ./slack-notify-branch.sh
orbs:
  win: circleci/windows@2.2.0


jobs:
  build:
    working_directory: /temp
    docker:
      - image:  mcr.microsoft.com/dotnet/sdk:5.0-focal
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OUTPUT: 1
    steps:
      # Checkout source code and try to build & pack
      - checkout
      - run: dotnet restore Analytics/Analytics.csproj
      - run: dotnet build Analytics/Analytics.csproj --configuration Release
  pack:
    working_directory: /pack
    executor:  
      name: win/default
    steps:
      - checkout
      - run:
          name: Generating Nuget Package
          command: dotnet pack -o /packages -c Release Analytics\Analytics.csproj
      - store_artifacts:
          path: /packages/
  test:
    working_directory: /test
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:2.1
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OUTPUT: 1
    steps:
      - checkout
      - run: dotnet restore Test/Test.csproj
      - run: dotnet test Test/Test.csproj
  test_20:
    working_directory: /test20
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:2.1
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OUTPUT: 1
    steps:
      - checkout
      - run: dotnet restore Test.NetStandard20/Test.NetStandard20.csproj
      - run: dotnet test Test.NetStandard20/Test.NetStandard20.csproj
  test_50:
    working_directory: /test50
    docker:
      - image:  mcr.microsoft.com/dotnet/sdk:5.0-focal
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OUTPUT: 1
    steps:
      - checkout
      - run: dotnet restore Test.Net50/Test.Net50.csproj
      - run: dotnet test Test.Net50/Test.Net50.csproj
  test_35:
    working_directory: /test35
    docker:
      - image: mono:latest
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OUTPUT: 1
    steps:
      - checkout
      - run: nuget restore Test.Net35/Test.Net35.csproj -SolutionDirectory ./
      - run: msbuild Test.Net35/Test.Net35.csproj /t:restore
      - run: msbuild Test.Net35/Test.Net35.csproj /p:Configuration=Release
      - run: mono --debug ./packages/NUnit.ConsoleRunner.3.7.0/tools/nunit3-console.exe Test.Net35/bin/Release/Test.Net35.dll
  test_45:
    working_directory: /test45
    docker:
      - image: mono:latest
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OUTPUT: 1
    steps:
      - checkout
      - run: nuget restore Test.Net45/Test.Net45.csproj -SolutionDirectory ./
      - run: msbuild Test.Net45/Test.Net45.csproj /t:restore
      - run: msbuild Test.Net45/Test.Net45.csproj /p:Configuration=Release
      - run: mono --debug ./packages/NUnit.ConsoleRunner.3.7.0/tools/nunit3-console.exe Test.Net45/bin/Release/Test.Net45.dll
  test_e2e:
    working_directory: /test_e2e
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:2.1
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OUTPUT: 1
    steps:
      - checkout
      - run: dotnet restore Test.E2E/Test.E2E.csproj
      - run: dotnet build Test.E2E/Test.E2E.csproj
      - run: cd Test.E2E/ && ./e2e.sh
      - run: *notify_on_fail

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test
      - test_20
      - test_35
      - test_45
      - test_50
      - test_e2e
      - pack:
          requires:
            - build
            - test_e2e
  scheduled_e2e_test:
    triggers:
      - schedule:
          cron: "25 * * * *"
          filters:
            branches:
              only:
                - master
                - scheduled_e2e_testing
    jobs:
      - test_e2e
